def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, Channel: demo)
} 

node {
    def mavenHome = tool name: "Maven3.8.5"
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')),
    [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
   try {
   stage ('checkoutCode')
    {
     git branch: 'development', credentialsId: 'f7bab238-d650-457c-9b05-e43839715ce6', 
     url: 'https://github.com/sunilkumarp688/maven-web-application.git'   
    }
    stage ('Built')
    {
        sh " ${mavenHome}/bin/mvn clean package"
    }
    stage ('Execute sonarQube reports')
    {
        sh " ${mavenHome}/bin/mvn sonar:sonar"
    }
  stage ('Upload Artifacts into Nexus')
    {
        sh " ${mavenHome}/bin/mvn deploy"
    }
    stage ('Deployment into Tomcat server')
    {
         sshagent(['bfa87be9-f903-4f5b-8d40-43b5f4f072ca']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.38.222:/opt/apache-tomcat-9.0.64/webapps"
}

    }  
    }catch(e) {
    currentBuild.result = "FAILED"
    throw e
    }finally {
    // Success or failure, always send notifications
    notifyBuild(currentBuild.result)
  }
    
    }
